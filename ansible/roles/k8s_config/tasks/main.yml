---
# tasks file for k8s_config
 - include_vars: "{{ playbook_dir }}/config.yml"

 - name: Configure metallb
   ignore_errors: yes
   shell: |
     kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
     kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
     kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml

 - name: Define template
   template:
     src: metallb.yml.j2
     dest: /tmp/metallb.yml

 - name: Apply metalb config
   shell: kubectl apply -f  /tmp/metallb.yml

 - name: Get helm
   get_url:
      url: https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
      dest: /tmp/helm.tar.gz
  
 - name: Extract helm
   unarchive:
      src: /tmp/helm.tar.gz
      dest: /usr/local/bin/
      remote_src: yes
      owner: root
      group: root
      mode: "0755"
      extra_opts: 
        - --strip-components=1
        - --wildcards
        - '*/helm'

 - name: Install nfs provisioner 1
   shell: |
       kubectl create namespace {{ nfs.storage_class.namespace }}  
   register: outp
   until: "outp is not failed"
   retries: 100
   delay: 10

 - name: Install nfs provisioner 2
   shell: |       
       helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/
   register: outp
   until: "outp is not failed"
   retries: 100
   delay: 10

 - name: Install nfs provisioner 3
   shell: |
       helm install -n {{ nfs.storage_class.namespace }} nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \
          --set nfs.server={{ nfs01 }} --set nfs.path={{ nfs.path }} --set storageClass.name={{ nfs.storage_class.name }} --set storageClass.defaultClass={{ nfs.storage_class.name }}
   register: outp
   until: "outp is not failed"
   retries: 100
   delay: 10      



  